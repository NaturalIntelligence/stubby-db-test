# It will error out if emp id is not found
-  request:
      url: /stubs/(admin|staff|customer|security)/([0-9]+)/1
      
   dbset:
      db: <% url.1 %>
      key: <% url.2 %>
      #err: err

   response:
      file: authentication.xml

# It will serve response from fault.xml if emp id is not found
-  request:
      url: /stubs/(admin|staff|customer|security)/([0-9]+)/2
      
   dbset:
      db: <% url.1 %>
      key: <% url.2 %>
      err:
         file: fault.xml

   response:
      file: authentication.xml

#Serve response with random authtoken
-  request:
      url: /stubs/(admin|staff|customer|security)/[0-9]+/3
      
   dbset:
      db: authtokens
      strategy: random #round-robin

   response:
      file: authentication.xml

# It'll not match with this request mapping if key or db are not found
-  request:
      url: /stubs/(admin|staff|customer|security)/([0-9]+)/4
      
   dbset:
      db: <% url.1 %>
      key: <% url.2 %>
      err: skip

   response:
      file: authentication.xml

# It'll return any random response if above mapping is not matched and emp id is found in prohibited_user_db
-  request:
      url: /stubs/(admin|staff|customer|security)/([0-9]+)/4
      
   dbset:
      db: prohibited_user_db
      key: <% url.2 %>
      err: skip

   response:
      strategy: random
      files: ['unauthorized.xml','deleted.xml','locked.xml']

# -  request:
#       url: /stubs/(admin|staff|customer|security)/[0-9]+
      
#    dbset:
#       db: unauthorized
#       key: <% url.2 %>

#    response:
#       file: unauthorized.xml

# -  request:
#       url: /stubs/(admin|staff|customer|security)/[0-9]+/4
      
#    response:
#       file: user_not_found.txt 


# -  request:
#       url: /stubs/(admin|staff|customer|security)/[0-9]+/[0-9]?
      
#    response:
#       file: user_not_found.txt 


-  request:
      url: /stubs/(admin|staff|customer|security)/[0-9]+
      
   response:
      file: user_not_found.txt 